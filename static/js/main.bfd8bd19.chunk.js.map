{"version":3,"sources":["GlobalStyle.jsx","components/search/index.jsx","components/search/Search.jsx","components/results/Results.styled.jsx","api/getUser.js","components/results/Result.jsx","components/results/index.jsx","components/results/Results.jsx","components/pagination/Pagination.styled.jsx","components/pagination/getPages.js","components/pagination/index.jsx","components/pagination/Pagination.jsx","api/search.js","theme.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalStyle","createGlobalStyle","props","theme","bodyBg","bodyText","headerBg","headerText","primaryBg","primaryText","inputBorder","Search","labelText","placeHolderText","buttonText","onSubmit","useState","query","setQuery","e","preventDefault","htmlFor","type","name","id","placeholder","value","onChange","target","ResultsStyled","styled","div","a","Error","fetch","response","status","json","data","getUser","Result","userData","setUserData","error","setError","useEffect","message","getData","avatar_url","login","html_url","className","src","alt","href","company","bio","renderDetails","Results","children","PaginationStyled","secondaryText","secondaryBg","tertiaryText","tertiaryBg","getPages","totalPages","currentPage","maxButtons","range","surroundingSpan","Math","floor","calculatedStartPage","calculatedEndPage","startPage","pages","page","push","Pagination","pageChanged","isLast","disabled","onClick","map","recordsPerPage","search","defaultTheme","App","results","setResults","setCurrentPage","pageSize","searchApi","round","total_count","items","result","renderResults","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAqDeA,EAnDKC,YAAH,qnCAYW,SAACC,GAAD,OAAWA,EAAMC,MAAMC,UAClC,SAACF,GAAD,OAAWA,EAAMC,MAAME,YAOZ,SAACH,GAAD,OAAWA,EAAMC,MAAMG,YAClC,SAACJ,GAAD,OAAWA,EAAMC,MAAMI,cAUV,SAACL,GAAD,OAAWA,EAAMC,MAAMK,aACzB,SAACN,GAAD,OAAWA,EAAMC,MAAMK,aAClC,SAACN,GAAD,OAAWA,EAAMC,MAAMM,eAYV,SAACP,GAAD,OAAWA,EAAMC,MAAMO,e,OC7CtCC,ECCA,SAAC,GAAwD,IAAvDC,EAAsD,EAAtDA,UAAWC,EAA2C,EAA3CA,gBAAiBC,EAA0B,EAA1BA,WAAYC,EAAc,EAAdA,SAErD,EAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAYA,OACI,uBAAMH,SAXW,SAAAI,GAGjB,GAFAA,EAAEC,iBAEEH,EAIJ,OAAOF,EAASE,IAIhB,UACI,uBAAOI,QAAQ,eAAf,SAA+BT,IAC/B,uBACIU,KAAK,OACLC,KAAK,SACLC,GAAG,eACHC,YAAaZ,EACba,MAAOT,EACPU,SAAU,SAACR,GAAD,OAAOD,EAASC,EAAES,OAAOF,UAEvC,wBAAQJ,KAAK,SAAb,SACKR,QCqBFe,EAhDOC,IAAOC,IAAV,+4B,4CCFnB,WAAuBP,GAAvB,iBAAAQ,EAAA,yDAESR,GAAa,KAAPA,EAFf,sBAGc,IAAIS,MAAM,6BAHxB,uBAM2BC,MAAM,+BAAD,OACOV,IAPvC,UAU4B,OAJlBW,EANV,QAUiBC,OAVjB,sBAWc,IAAIH,MACN,4CAZZ,uBAgBuBE,EAASE,OAhBhC,cAgBUC,EAhBV,yBAkBWA,GAlBX,6C,sBAqBeC,I,EAAAA,E,4CC8CAC,EA9DA,SAAC,GAAa,IAAXhB,EAAU,EAAVA,GAEd,EAAgCR,mBAAS,MAAzC,mBAAOyB,EAAP,KAAiBC,EAAjB,KACA,EAA0B1B,mBAAS,MAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KAiBA,GAfAC,qBAAU,WAAM,4CACZ,4BAAAb,EAAA,+EAE2BO,EAAQf,GAFnC,OAEcc,EAFd,OAIQI,EAAYJ,GAJpB,gDAOQM,EAAS,KAAEE,SAPnB,0DADY,uBAAC,WAAD,wBAYZC,KACD,CAACvB,IAEDmB,EACC,OAAO,4BAAIA,IAEf,IAAKF,EACD,OAAO,KAGX,IAWQO,EAAsCP,EAAtCO,WAAYC,EAA0BR,EAA1BQ,MAAOC,EAAmBT,EAAnBS,SAAU3B,EAASkB,EAATlB,KAErC,OACI,6BACI,sBAAK4B,UAAU,SAAf,UACI,qBAAKA,UAAU,iBAAf,SACI,qBAAKC,IAAKJ,EAAYK,IAAG,UAAK9B,EAAL,eAE7B,sBAAK4B,UAAU,eAAf,UACI,sBAAKA,UAAU,uBAAf,UACI,mBAAGG,KAAMJ,EAAT,SAAoBD,IACpB,4BAAI1B,OAtBF,WAElB,IAAQgC,EAAiBd,EAAjBc,QAASC,EAAQf,EAARe,IACjB,OACI,sBAAKL,UAAU,wBAAf,UACKI,GAAsB,SAAXA,EAAoB,+BAAOA,IAAkB,KACxDC,GAAc,SAAPA,EAAgB,+BAAOA,IAAc,QAkBxCC,YCrDNC,ECEC,SAAC,GAAiB,IAAhBC,EAAe,EAAfA,SAEd,OACI,cAAC,EAAD,UACI,6BAAKA,OCSFC,EAhBU9B,IAAOC,IAAV,4SAIL,SAAC7B,GAAD,OAAWA,EAAMC,MAAM0D,iBACZ,SAAC3D,GAAD,OAAWA,EAAMC,MAAM2D,eACrB,SAAC5D,GAAD,OAAWA,EAAMC,MAAM2D,eAGhC,SAAC5D,GAAD,OAAWA,EAAMC,MAAM4D,gBACZ,SAAC7D,GAAD,OAAWA,EAAMC,MAAM6D,cACrB,SAAC9D,GAAD,OAAWA,EAAMC,MAAM6D,cCQ1CC,MArBf,SAAmBC,GAA+C,IAAnCC,EAAkC,uDAApB,EAAGC,EAAiB,uDAAJ,EACnDC,EAAQH,EAAaE,EAAaF,EAAaE,EAE/CE,EAAkBC,KAAKC,MAAMH,EAAQ,GACrCI,EAAsBN,EAAcG,EACpCI,EAAoBP,EAAcG,EAEpCK,EAAYF,GAAuB,EAAI,EAAIA,EAC5CC,EAAoBR,IAEnBS,EAAYD,GAAqBL,EAAQ,IAI7C,IADA,IAAMO,EAAQ,GACNC,EAAOF,EAAWE,EAAOF,EAAYN,EAAOQ,IAChDD,EAAME,KAAKD,GAGf,OAAOD,GChBIG,ECSI,SAAC,GAA8C,IAA5Cb,EAA2C,EAA3CA,WAAYC,EAA+B,EAA/BA,YAAaa,EAAkB,EAAlBA,YAErCC,EAASd,IAAgBD,EAY/B,OACI,eAAC,EAAD,WACI,wBAAQf,UAAU,aAAa+B,SAA0B,IAAhBf,EAAmB,aAAW,mBAAmBgB,QAAS,kBAAMH,EAAY,IAArH,SArBE,OAsBF,wBAAQ7B,UAAU,aAAa+B,SAA0B,IAAhBf,EAAmB,aAAW,sBAAsBgB,QAAS,kBAAMH,EAAYb,EAAc,IAAtI,SApBC,MAQSF,EAASC,EAAYC,GAEtBiB,KAAI,SAAAP,GACb,IAAM1B,EAAW0B,IAAOV,EAAc,iCAAmC,aAEzE,OAAO,wBAAmBhB,UAAWA,EAAW,kCAA0B0B,GAAQM,QAAS,kBAAMH,EAAYH,IAAtG,SAA8GA,GAAjGA,MASpB,wBAAQ1B,UAAU,aAAa+B,SAAUD,EAAQ,aAAW,kBAAkBE,QAAS,kBAAMH,EAAYb,EAAc,IAAvH,SArBC,MAsBD,wBAAQhB,UAAU,aAAa+B,SAAUD,EAAQ,aAAW,kBAAkBE,QAAS,kBAAMH,EAAYd,IAAzG,SAxBC,W,4CCPb,WACIjD,GADJ,2CAAAe,EAAA,0FAEwD,GAFxD,IAEMV,YAFN,MAEa,QAFb,MAEsB+D,sBAFtB,MAEuC,GAFvC,MAE2CR,YAF3C,MAEkD,EAFlD,EAIS5D,GAAmB,KAAVA,EAJlB,sBAKc,IAAIgB,MAAM,iCALxB,uBAQ2BC,MAAM,iCAAD,OACSZ,EADT,cACmBL,EADnB,qBACqCoE,EADrC,iBAC4DR,IAT5F,UAY4B,OAJlB1C,EARV,QAYiBC,OAZjB,sBAac,IAAIH,MACN,4CAdZ,UAkBSE,EAASE,KAlBlB,uBAmBc,IAAIJ,MACN,iCApBZ,yBAwBuBE,EAASE,OAxBhC,eAwBUC,EAxBV,yBA0BWA,GA1BX,6C,sBA6BegD,M,4CC7BTC,EAAe,CACjBjF,SAAU,UACVC,WAAY,UACZH,OAAQ,OACRC,SAAU,UACVG,UAAW,UACXsD,YAAa,UACbE,WAAY,UACZvD,YAAa,UACboD,cAAe,OACfE,aAAc,OACdrD,YAAa,WCiEF8E,EAhEH,WAEV,MAA0BxE,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAA8BF,mBAAS,MAAvC,mBAAOyE,EAAP,KAAgBC,EAAhB,KACA,EAAsC1E,mBAAS,GAA/C,mBAAOmD,EAAP,KAAoBwB,EAApB,KACA,EAA0B3E,mBAAS,IAAnC,mBAAO2B,EAAP,KAAcC,EAAd,KAEAC,qBAAU,WAAM,4CACd,4BAAAb,EAAA,+EAEuBsD,EAAOrE,EAAO,CAC7B2E,SAbqB,GAcrBf,KAAMV,IAJd,OAEU7B,EAFV,OAOIoD,EAAWpD,GAPf,gDAUIM,EAAS,KAAEE,SAVf,0DADc,sBAeV7B,GAfW,WAAD,wBAgBZ4E,KAED,CAAC5E,EAAOkD,IAyBX,OACE,eAAC,IAAD,CAAehE,MAAOoF,EAAtB,UACE,cAAC,EAAD,IACA,iCACE,sDAEF,iCACE,cAAC,EAAD,CAAQ3E,UAAU,eAAeC,gBAAgB,oBAAoBC,WAAW,SAASC,SAAU,SAAAE,GAAK,OAAIC,EAASD,MA9BrG,WAEpB,GAAG0B,EACD,OAAO,4BAAIA,IAGb,IAAI8C,EACF,OAAO,KAGT,IAAMvB,EAAaK,KAAKuB,MAAML,EAAQM,YAvCT,IAyC7B,OACE,qCACA,cAAC,EAAD,CAAY7B,WAAYA,EAAYC,YAAaA,EAAaa,YAAa,SAAAH,GAAI,OAAIc,EAAed,MAChG,cAAC,EAAD,UACGY,EAAQO,MAAMZ,KAAI,SAAAa,GAAM,OAAI,cAAC,EAAD,CAAQzE,GAAIyE,EAAOzE,IAASyE,EAAOzE,SAElE,yCA/CyB,GA+CzB,aAAgDiE,EAAQM,kBAavDG,UC1DMC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bfd8bd19.chunk.js","sourcesContent":["import { createGlobalStyle } from \"styled-components\";\n\nconst GlobalStyle = createGlobalStyle`\n    html {\n        font-size: 100%;\n    }\n\n    body {\n        margin: 0;\n        font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n            'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n            sans-serif;\n        -webkit-font-smoothing: antialiased;\n        -moz-osx-font-smoothing: grayscale;\n        background-color: ${(props) => props.theme.bodyBg};\n        color: ${(props) => props.theme.bodyText};\n    }\n\n    header {\n        margin-left: auto;\n        margin-right: auto;\n        padding: 1rem 3rem;\n        background-color: ${(props) => props.theme.headerBg};\n        color: ${(props) => props.theme.headerText};\n    }\n\n    main {\n        margin-left: auto;\n        margin-right: auto;\n        padding: 1rem 3rem;\n    }\n\n    button {\n        border: .1rem solid ${(props) => props.theme.primaryBg};\n        background-color: ${(props) => props.theme.primaryBg};\n        color: ${(props) => props.theme.primaryText};\n        cursor: pointer;\n        padding: 9px 15px;\n        border-radius: 4px;\n        margin-left: 1rem;\n\n        :focus {\n            border: #1378c7 solid .1rem;\n        }\n    }\n\n    input[type=\"text\"] {\n        border: .1rem solid ${(props) => props.theme.inputBorder};\n        padding: 7px 14px;\n        margin-left: 1rem;\n    }\n`;\n\nexport default GlobalStyle;","import Search from \"./Search\";\n\nexport default Search;","import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nconst Search = ({labelText, placeHolderText, buttonText, onSubmit}) => {\n\n    const [query, setQuery] = useState(\"\");\n\n    const handleSubmit = e => {\n        e.preventDefault();\n\n        if(!query) {\n            return;\n        };\n\n        return onSubmit(query);\n    }\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <label htmlFor=\"input-search\">{labelText}</label>\n            <input \n                type=\"text\"\n                name=\"search\"\n                id=\"input-search\"\n                placeholder={placeHolderText}\n                value={query}\n                onChange={(e) => setQuery(e.target.value)}\n            />\n            <button type=\"submit\">\n                {buttonText}\n            </button>\n        </form>\n    )\n}\n\nSearch.propTypes = {\n    labelText: PropTypes.string.isRequired,\n    placeHolderText: PropTypes.string.isRequired,\n    buttonText: PropTypes.string.isRequired,\n    onSubmit: PropTypes.func.isRequired,\n}\n\nexport default Search\n","import styled from \"styled-components\";\n\nconst ResultsStyled = styled.div`\n    display:flex;\n\n    ul {\n        list-style: none;\n    }\n\n    .result {\n        display: flex;\n        align-items: center;\n        padding: 1rem;\n        min-width: 400px;\n        border-bottom: 1px solid #dadada;\n\n        &__avatar {\n            flex-shrink: 0;\n\n            img {\n                width: 3rem;\n                height: 3rem;\n                border-radius: 50%;\n                margin-right: 1rem;\n            }\n        }\n\n        &__main {\n            flex: auto;\n\n            &--header {\n                display: flex;\n                align-items: center;\n\n                p {\n                    margin-left: 1rem;\n                }\n            }\n\n            &--details {\n                font-size: .7rem;\n\n                span {\n                    margin: 0 .5rem;\n                }\n            }\n        }\n    }\n`;\n\nexport default ResultsStyled;","async function getUser(id) {\n\n    if (!id || id === \"\") {\n        throw new Error(\"Please provide a user id.\");\n    }\n\n    const response = await fetch(\n        `https://api.github.com/user/${id}`,\n    );\n\n    if (response.status === 403) {\n        throw new Error(\n            \"Request limit reached, please try later.\",\n        );\n    }\n\n    const data = await response.json();\n\n    return data;\n}\n\nexport default getUser;","import React, { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport getUser from \"../../api/getUser\";\n\nconst Result = ({ id }) =>  {\n\n    const [userData, setUserData] = useState(null);\n    const [error, setError] = useState(null);\n\n    useEffect(() => {\n        async function getData() {\n            try {\n                const data = await getUser(id);\n        \n                setUserData(data);\n            }\n            catch (e) {\n                setError(e.message);\n            }\n        }\n\n        getData();\n    }, [id]); \n    \n    if(error) {\n        return <p>{error}</p>\n    }\n    if (!userData) {\n        return null;\n    }\n\n    const renderDetails = () => {\n\n        const { company, bio } = userData;\n        return(\n            <div className=\"result__main--details\">\n                {company && company !==\"null\" ? <span>{company}</span> : null}\n                {bio && bio !==\"null\" ? <span>{bio}</span> : null}\n            </div>\n        );\n    }\n\n    const { avatar_url, login, html_url, name } = userData;\n\n    return (    \n        <li>\n            <div className=\"result\">\n                <div className=\"result__avatar\">\n                    <img src={avatar_url} alt={`${name} avatar`} />\n                </div>\n                <div className=\"result__main\">\n                    <div className=\"result__main--header\">\n                        <a href={html_url}>{login}</a>\n                        <p>{name}</p>\n                    </div>\n                    {renderDetails()}\n                </div>                \n            </div>\n        </li>\n    )\n}\n\nResult.propTypes = {\n    id: PropTypes.number.isRequired,\n}\n\nexport default Result\n","import Results from \"./Results\";\nimport Result from \"./Result\";\n\nexport default Results;\nexport { Result };","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport ResultsStyled from \"./Results.styled\";\n\nconst Results = ({children}) =>  {\n\n    return (\n        <ResultsStyled>\n            <ul>{children}</ul>\n        </ResultsStyled>\n    )\n}\n\nResults.propTypes = {\n\n}\n\nexport default Results\n","import styled from \"styled-components\";\n\nconst PaginationStyled = styled.div`\n    margin-top: 2rem;\n\n    .pagination {\n        color: ${(props) => props.theme.secondaryText};\n        background-color: ${(props) => props.theme.secondaryBg};\n        border: .1rem solid ${(props) => props.theme.secondaryBg};\n\n        &--current {\n            color: ${(props) => props.theme.tertiaryText};\n            background-color: ${(props) => props.theme.tertiaryBg};\n            border: .1rem solid ${(props) => props.theme.tertiaryBg};\n        }\n    }\n`;\n\nexport default PaginationStyled;","function getPages( totalPages, currentPage = 1, maxButtons = 5 ) {\n    const range = totalPages < maxButtons ? totalPages : maxButtons;\n    \n    const surroundingSpan = Math.floor(range / 2);\n    const calculatedStartPage = currentPage - surroundingSpan;\n    const calculatedEndPage = currentPage + surroundingSpan;\n\n    let startPage = calculatedStartPage <= 0 ? 1 : calculatedStartPage;\n    if(calculatedEndPage > totalPages)\n    {\n        startPage = calculatedEndPage - (range + 1);\n    }\n\n    const pages = [];\n    for(let page = startPage; page < startPage + range; page++) {\n        pages.push(page);\n    }\n\n    return pages;\n};\n\nexport default getPages;","import Pagination from \"./Pagination\";\n\nexport default Pagination;","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport PaginationStyled from \"./Pagination.styled\";\nimport getPages from \"./getPages\";\n\nconst FIRST = \"|<\";\nconst LAST = \">|\";\nconst PREV = \"<\"\nconst NEXT = \">\";\n\nconst Pagination = ({ totalPages, currentPage, pageChanged }) => {\n\n    const isLast = currentPage === totalPages;\n\n    const renderPageButtons = () => {\n        const pages = getPages(totalPages, currentPage);\n\n        return pages.map(page => {\n            const className= page===currentPage ? \"pagination pagination--current\" : \"pagination\";\n            \n            return <button key={page} className={className} aria-label={`Go to page ${page}`} onClick={() => pageChanged(page)}>{page}</button>;\n        })\n    }\n\n    return (\n        <PaginationStyled>\n            <button className=\"pagination\" disabled={currentPage === 1} aria-label=\"Go to first page\" onClick={() => pageChanged(1)}>{FIRST}</button>\n            <button className=\"pagination\" disabled={currentPage === 1} aria-label=\"Go to previous page\" onClick={() => pageChanged(currentPage - 1)}>{PREV}</button>\n            {renderPageButtons()}\n            <button className=\"pagination\" disabled={isLast} aria-label=\"Go to next page\" onClick={() => pageChanged(currentPage + 1)}>{NEXT}</button>\n            <button className=\"pagination\" disabled={isLast} aria-label=\"Go to last page\" onClick={() => pageChanged(totalPages)}>{LAST}</button>\n        </PaginationStyled>\n    )\n}\n\nPagination.propTypes = {\n    totalPages: PropTypes.number.isRequired,\n    currentPage: PropTypes.number.isRequired,\n    pageChanged: PropTypes.func.isRequired,\n}\n\nexport default Pagination\n","async function search(\n    query,\n    { type = \"users\", recordsPerPage = 10, page = 1 } = {},\n) {\n    if (!query || query === \"\") {\n        throw new Error(\"Please provide a search term.\");\n    }\n\n    const response = await fetch(\n        `https://api.github.com/search/${type}?q=${query}&per_page=${recordsPerPage}&page=${page}`,\n    );\n\n    if (response.status === 403) {\n        throw new Error(\n            \"Request limit reached, please try later.\",\n        );\n    }\n\n    if (!response.json) {\n        throw new Error(\n            \"An unknown error has occurred\",\n        );\n    }\n    \n    const data = await response.json();\n\n    return data;\n}\n\nexport default search;","const defaultTheme = {\n    headerBg: \"#202121\",\n    headerText: \"#bdc1c6\",\n    bodyBg: \"#fff\",\n    bodyText: \"#202121\", \n    primaryBg: \"#8ab4f8\",\n    secondaryBg: \"#3e3f3f\",\n    tertiaryBg: \"#1378c7\",\n    primaryText: \"#202124\",\n    secondaryText: \"#fff\",\n    tertiaryText: \"#fff\",\n    inputBorder: \"#dad9d6\",\n};\n\nexport { defaultTheme };","import React, { useEffect, useState } from \"react\";\nimport { ThemeProvider } from \"styled-components\";\n\nimport GlobalStyle from \"./GlobalStyle\";\nimport Search from \"./components/search\";\nimport Results, { Result } from \"./components/results\";\nimport Pagination from \"./components/pagination\";\nimport search from \"./api/search\";\nimport { defaultTheme } from \"./theme\";\n\nconst DEFAULT_RECORDS_PER_PAGE = 10;\n\nconst App = () => {\n\n  const [query, setQuery] = useState(\"\");\n  const [results, setResults] = useState(null);\n  const [currentPage, setCurrentPage] = useState(1);\n  const [error, setError] = useState(\"\");\n\n  useEffect(() => {\n    async function searchApi() {\n      try {\n        const data = await search(query, {\n            pageSize: DEFAULT_RECORDS_PER_PAGE,\n            page: currentPage,\n        });\n\n        setResults(data);\n      }\n      catch (e) {\n        setError(e.message);\n      }\n    }\n\n    if (query) {\n      searchApi();\n    }\n  }, [query, currentPage])\n\n  const renderResults = () => {\n\n    if(error) {\n      return <p>{error}</p>\n    }\n\n    if(!results) {\n      return null;\n    }\n    \n    const totalPages = Math.round(results.total_count / DEFAULT_RECORDS_PER_PAGE);\n\n    return (\n      <>\n      <Pagination totalPages={totalPages} currentPage={currentPage} pageChanged={page => setCurrentPage(page)}/>\n        <Results>\n          {results.items.map(result => <Result id={result.id} key={result.id} />)}\n        </Results>\n        <p>Showing {DEFAULT_RECORDS_PER_PAGE} users of {results.total_count}</p>        \n      </>\n    );\n  }\n\n  return (\n    <ThemeProvider theme={defaultTheme}>\n      <GlobalStyle />\n      <header>\n        <h1>Github User Search</h1>        \n      </header>\n      <main>\n        <Search labelText=\"Search Users\" placeHolderText=\"Enter search term\" buttonText=\"Search\" onSubmit={query => setQuery(query)} />\n        {renderResults()}\n      </main>\n      </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}